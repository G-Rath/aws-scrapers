{
  "servicePrefix": "gamelift",
  "actions": {
    "AcceptMatch": {
      "name": "AcceptMatch",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to register player acceptance or rejection of a proposed FlexMatch\n                                                match",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ClaimGameServer": {
      "name": "ClaimGameServer",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to locate and reserve a game server to host a new game session",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateAlias": {
      "name": "CreateAlias",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to define a new alias for a fleet",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateBuild": {
      "name": "CreateBuild",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to create a new game build using files stored in an Amazon S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateFleet": {
      "name": "CreateFleet",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to create a new fleet of computing resources to run your game servers",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateFleetLocations": {
      "name": "CreateFleetLocations",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to specify additional locations for a fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateGameServerGroup": {
      "name": "CreateGameServerGroup",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to create a new game server group, set up a corresponding Auto Scaling\n                                                group, and launche instances to host game servers",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateGameSession": {
      "name": "CreateGameSession",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to start a new game session on a specified fleet",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateGameSessionQueue": {
      "name": "CreateGameSessionQueue",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to set up a new queue for processing game session placement requests",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateMatchmakingConfiguration": {
      "name": "CreateMatchmakingConfiguration",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to create a new FlexMatch matchmaker",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateMatchmakingRuleSet": {
      "name": "CreateMatchmakingRuleSet",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to create a new matchmaking rule set for FlexMatch",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreatePlayerSession": {
      "name": "CreatePlayerSession",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to reserve an available game session slot for a player",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreatePlayerSessions": {
      "name": "CreatePlayerSessions",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to reserve available game session slots for multiple players",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateScript": {
      "name": "CreateScript",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to create a new Realtime Servers script",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateVpcPeeringAuthorization": {
      "name": "CreateVpcPeeringAuthorization",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to allow GameLift to create or delete a peering connection between\n                                                a GameLift fleet VPC and a VPC on another AWS account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateVpcPeeringConnection": {
      "name": "CreateVpcPeeringConnection",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to establish a peering connection between your GameLift fleet VPC\n                                                and a VPC on another account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteAlias": {
      "name": "DeleteAlias",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to delete an alias",
      "accessLevel": "Write",
      "resourceTypes": [
        "alias*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteBuild": {
      "name": "DeleteBuild",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to delete a game build",
      "accessLevel": "Write",
      "resourceTypes": [
        "build*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteFleet": {
      "name": "DeleteFleet",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to delete an empty fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteFleetLocations": {
      "name": "DeleteFleetLocations",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to delete locations for a fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteGameServerGroup": {
      "name": "DeleteGameServerGroup",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to permanently delete a game server group and terminate FleetIQ\n                                                activity for the corresponding Auto Scaling group",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteGameSessionQueue": {
      "name": "DeleteGameSessionQueue",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to delete an existing game session queue",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameSessionQueue*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteMatchmakingConfiguration": {
      "name": "DeleteMatchmakingConfiguration",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to delete an existing FlexMatch matchmaker",
      "accessLevel": "Write",
      "resourceTypes": [
        "matchmakingConfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteMatchmakingRuleSet": {
      "name": "DeleteMatchmakingRuleSet",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to delete an existing FlexMatch matchmaking rule set",
      "accessLevel": "Write",
      "resourceTypes": [
        "matchmakingRuleSet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteScalingPolicy": {
      "name": "DeleteScalingPolicy",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to delete a set of auto-scaling rules",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteScript": {
      "name": "DeleteScript",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to delete a Realtime Servers script",
      "accessLevel": "Write",
      "resourceTypes": [
        "script*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteVpcPeeringAuthorization": {
      "name": "DeleteVpcPeeringAuthorization",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to cancel a VPC peering authorization",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteVpcPeeringConnection": {
      "name": "DeleteVpcPeeringConnection",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to remove a peering connection between VPCs",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeregisterGameServer": {
      "name": "DeregisterGameServer",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to remove a game server from a game server group",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeAlias": {
      "name": "DescribeAlias",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for an alias",
      "accessLevel": "Read",
      "resourceTypes": [
        "alias*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeBuild": {
      "name": "DescribeBuild",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for a game build",
      "accessLevel": "Read",
      "resourceTypes": [
        "build*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeEC2InstanceLimits": {
      "name": "DescribeEC2InstanceLimits",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve the maximum allowed and current usage for EC2 instance\n                                                types",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetAttributes": {
      "name": "DescribeFleetAttributes",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve general properties, including status, for fleets",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetCapacity": {
      "name": "DescribeFleetCapacity",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve the current capacity setting for fleets",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetEvents": {
      "name": "DescribeFleetEvents",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve entries from a fleet's event log",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetLocationAttributes": {
      "name": "DescribeFleetLocationAttributes",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve general properties, including statuses, for a fleet's\n                                                locations",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetLocationCapacity": {
      "name": "DescribeFleetLocationCapacity",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve the current capacity setting for a fleet's location",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetLocationUtilization": {
      "name": "DescribeFleetLocationUtilization",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve utilization statistics for fleet's location",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetPortSettings": {
      "name": "DescribeFleetPortSettings",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve the inbound connection permissions for a fleet",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetUtilization": {
      "name": "DescribeFleetUtilization",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve utilization statistics for fleets",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameServer": {
      "name": "DescribeGameServer",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for a game server",
      "accessLevel": "Read",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameServerGroup": {
      "name": "DescribeGameServerGroup",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for a game server group",
      "accessLevel": "Read",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameServerInstances": {
      "name": "DescribeGameServerInstances",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve the status of EC2 instances in a game server group",
      "accessLevel": "Read",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameSessionDetails": {
      "name": "DescribeGameSessionDetails",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for game sessions in a fleet, including the\n                                                protection policy",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameSessionPlacement": {
      "name": "DescribeGameSessionPlacement",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve details of a game session placement request",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameSessionQueues": {
      "name": "DescribeGameSessionQueues",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for game session queues",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameSessions": {
      "name": "DescribeGameSessions",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for game sessions in a fleet",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeInstances": {
      "name": "DescribeInstances",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve information about instances in a fleet",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeMatchmaking": {
      "name": "DescribeMatchmaking",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve details of matchmaking tickets",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeMatchmakingConfigurations": {
      "name": "DescribeMatchmakingConfigurations",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for FlexMatch matchmakers",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeMatchmakingRuleSets": {
      "name": "DescribeMatchmakingRuleSets",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for FlexMatch matchmaking rule sets",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribePlayerSessions": {
      "name": "DescribePlayerSessions",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for player sessions in a game session",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeRuntimeConfiguration": {
      "name": "DescribeRuntimeConfiguration",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve the current runtime configuration for a fleet",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeScalingPolicies": {
      "name": "DescribeScalingPolicies",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve all scaling policies that are applied to a fleet",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeScript": {
      "name": "DescribeScript",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for a Realtime Servers script",
      "accessLevel": "Read",
      "resourceTypes": [
        "script*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeVpcPeeringAuthorizations": {
      "name": "DescribeVpcPeeringAuthorizations",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve valid VPC peering authorizations",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeVpcPeeringConnections": {
      "name": "DescribeVpcPeeringConnections",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve details on active or pending VPC peering connections",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetGameSessionLogUrl": {
      "name": "GetGameSessionLogUrl",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve the location of stored logs for a game session",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetInstanceAccess": {
      "name": "GetInstanceAccess",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to request remote access to a specified fleet instance",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAliases": {
      "name": "ListAliases",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve all aliases that are defined in the current region",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListBuilds": {
      "name": "ListBuilds",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve all game build in the current region",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListFleets": {
      "name": "ListFleets",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve a list of fleet IDs for all fleets in the current region",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListGameServerGroups": {
      "name": "ListGameServerGroups",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve all game server groups that are defined in the current\n                                                region",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListGameServers": {
      "name": "ListGameServers",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve all game servers that are currently running in a game\n                                                server group",
      "accessLevel": "List",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListScripts": {
      "name": "ListScripts",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve properties for all Realtime Servers scripts in the current\n                                                region",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListTagsForResource": {
      "name": "ListTagsForResource",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve tags for GameLift resources",
      "accessLevel": "Read",
      "resourceTypes": [
        "alias"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutScalingPolicy": {
      "name": "PutScalingPolicy",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to create or update a fleet auto-scaling policy",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "RegisterGameServer": {
      "name": "RegisterGameServer",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to notify GameLift FleetIQ when a new game server is ready to host\n                                                gameplay",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "RequestUploadCredentials": {
      "name": "RequestUploadCredentials",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve fresh upload credentials to use when uploading a new\n                                                game build",
      "accessLevel": "Read",
      "resourceTypes": [
        "build*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ResolveAlias": {
      "name": "ResolveAlias",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve the fleet ID associated with an alias",
      "accessLevel": "Read",
      "resourceTypes": [
        "alias*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ResumeGameServerGroup": {
      "name": "ResumeGameServerGroup",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to reinstate suspended FleetIQ activity for a game server group",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "SearchGameSessions": {
      "name": "SearchGameSessions",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to retrieve game sessions that match a set of search criteria",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StartFleetActions": {
      "name": "StartFleetActions",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to resume auto-scaling activity on a fleet after it was suspended\n                                                with StopFleetActions()",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StartGameSessionPlacement": {
      "name": "StartGameSessionPlacement",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to send a game session placement request to a game session queue",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameSessionQueue*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StartMatchBackfill": {
      "name": "StartMatchBackfill",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to request FlexMatch matchmaking to fill available player slots\n                                                in an existing game session",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StartMatchmaking": {
      "name": "StartMatchmaking",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to request FlexMatch matchmaking for one or a group of players and\n                                                initiate game session placement",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StopFleetActions": {
      "name": "StopFleetActions",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to suspend auto-scaling activity on a fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StopGameSessionPlacement": {
      "name": "StopGameSessionPlacement",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to cancel a game session placement request that is in progress",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StopMatchmaking": {
      "name": "StopMatchmaking",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to cancel a matchmaking or match backfill request that is in progress",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "SuspendGameServerGroup": {
      "name": "SuspendGameServerGroup",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to temporarily stop FleetIQ activity for a game server group",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "TagResource": {
      "name": "TagResource",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to tag GameLift resources",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "alias"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UntagResource": {
      "name": "UntagResource",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to untag GameLift resources",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "alias"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateAlias": {
      "name": "UpdateAlias",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to update the properties of an existing alias",
      "accessLevel": "Write",
      "resourceTypes": [
        "alias*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateBuild": {
      "name": "UpdateBuild",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to update an existing build's metadata",
      "accessLevel": "Write",
      "resourceTypes": [
        "build*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateFleetAttributes": {
      "name": "UpdateFleetAttributes",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to update the general properties of an existing fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateFleetCapacity": {
      "name": "UpdateFleetCapacity",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to adjust a fleet's capacity settings",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateFleetPortSettings": {
      "name": "UpdateFleetPortSettings",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to adjust a fleet's port settings",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateGameServer": {
      "name": "UpdateGameServer",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to change game server properties, health status, or utilization\n                                                status",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateGameServerGroup": {
      "name": "UpdateGameServerGroup",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to update properties for game server group, including allowed instance\n                                                types",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateGameSession": {
      "name": "UpdateGameSession",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to update the properties of an existing game session",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateGameSessionQueue": {
      "name": "UpdateGameSessionQueue",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to update properties of an existing game session queue",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameSessionQueue*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateMatchmakingConfiguration": {
      "name": "UpdateMatchmakingConfiguration",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to update properties of an existing FlexMatch matchmaking configuration",
      "accessLevel": "Write",
      "resourceTypes": [
        "matchmakingConfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateRuntimeConfiguration": {
      "name": "UpdateRuntimeConfiguration",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to update how server processes are configured on instances in an\n                                                existing fleet",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateScript": {
      "name": "UpdateScript",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to update the metadata and content of an existing Realtime Servers\n                                                script",
      "accessLevel": "Write",
      "resourceTypes": [
        "script*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ValidateMatchmakingRuleSet": {
      "name": "ValidateMatchmakingRuleSet",
      "topics": [
        "Amazon GameLift"
      ],
      "description": "Grants permission to validate the syntax of a FlexMatch matchmaking rule set",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    }
  },
  "topics": [
    "Amazon GameLift"
  ]
}