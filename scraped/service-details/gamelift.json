{
  "servicePrefix": "gamelift",
  "actions": {
    "AcceptMatch": {
      "name": "AcceptMatch",
      "description": "Registers player acceptance or rejection of a proposed FlexMatch match.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ClaimGameServer": {
      "name": "ClaimGameServer",
      "description": "Locates and reserves a game server to host a new game session.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateAlias": {
      "name": "CreateAlias",
      "description": "Defines a new alias for a fleet.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateBuild": {
      "name": "CreateBuild",
      "description": "Creates a new game build using files stored in an Amazon S3 bucket.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateFleet": {
      "name": "CreateFleet",
      "description": "Creates a new fleet of computing resources to run your game servers.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateGameServerGroup": {
      "name": "CreateGameServerGroup",
      "description": "Creates a new game server group, sets up a corresponding Auto Scaling group, and launches\n                                                instances to host game servers.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateGameSession": {
      "name": "CreateGameSession",
      "description": "Starts a new game session on a specified fleet.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateGameSessionQueue": {
      "name": "CreateGameSessionQueue",
      "description": "Sets up a new queue for processing new game session placement requests.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateMatchmakingConfiguration": {
      "name": "CreateMatchmakingConfiguration",
      "description": "Creates a new FlexMatch matchmaker.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateMatchmakingRuleSet": {
      "name": "CreateMatchmakingRuleSet",
      "description": "Creates a new matchmaking rule set for FlexMatch.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreatePlayerSession": {
      "name": "CreatePlayerSession",
      "description": "Reserves an available game session slot for a player.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreatePlayerSessions": {
      "name": "CreatePlayerSessions",
      "description": "Reserves available game session slots for multiple players.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateScript": {
      "name": "CreateScript",
      "description": "Creates a new Realtime Servers script.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "dependentActions": ""
    },
    "CreateVpcPeeringAuthorization": {
      "name": "CreateVpcPeeringAuthorization",
      "description": "Allows GameLift to create or delete a peering connection between a GameLift fleet\n                                                VPC and a VPC on another AWS account.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateVpcPeeringConnection": {
      "name": "CreateVpcPeeringConnection",
      "description": "Establishes a peering connection between your GameLift fleet VPC and a VPC on another\n                                                account.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteAlias": {
      "name": "DeleteAlias",
      "description": "Deletes an alias.",
      "accessLevel": "Write",
      "resourceTypes": [
        "alias*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteBuild": {
      "name": "DeleteBuild",
      "description": "Deletes a game build.",
      "accessLevel": "Write",
      "resourceTypes": [
        "build*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteFleet": {
      "name": "DeleteFleet",
      "description": "Deletes an empty fleet.",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteGameServerGroup": {
      "name": "DeleteGameServerGroup",
      "description": "Permanently deletes a game server group and terminates FleetIQ activity for the corresponding\n                                                Auto Scaling group.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteGameSessionQueue": {
      "name": "DeleteGameSessionQueue",
      "description": "Deletes an existing game session queue.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameSessionQueue*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteMatchmakingConfiguration": {
      "name": "DeleteMatchmakingConfiguration",
      "description": "Deletes an existing FlexMatch matchmaker.",
      "accessLevel": "Write",
      "resourceTypes": [
        "matchmakingConfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteMatchmakingRuleSet": {
      "name": "DeleteMatchmakingRuleSet",
      "description": "Deletes an existing FlexMatch matchmaking rule set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "matchmakingRuleSet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteScalingPolicy": {
      "name": "DeleteScalingPolicy",
      "description": "Deletes a set of auto-scaling rules.",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteScript": {
      "name": "DeleteScript",
      "description": "Deletes a Realtime Servers script.",
      "accessLevel": "Write",
      "resourceTypes": [
        "script*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteVpcPeeringAuthorization": {
      "name": "DeleteVpcPeeringAuthorization",
      "description": "Cancels a VPC peering authorization.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteVpcPeeringConnection": {
      "name": "DeleteVpcPeeringConnection",
      "description": "Removes a peering connection between VPCs.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeregisterGameServer": {
      "name": "DeregisterGameServer",
      "description": "Removes a game server from a game server group.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeAlias": {
      "name": "DescribeAlias",
      "description": "Retrieves properties for an alias.",
      "accessLevel": "Read",
      "resourceTypes": [
        "alias*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeBuild": {
      "name": "DescribeBuild",
      "description": "Retrieves properties for a game build.",
      "accessLevel": "Read",
      "resourceTypes": [
        "build*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeEC2InstanceLimits": {
      "name": "DescribeEC2InstanceLimits",
      "description": "Retrieves the maximum allowed and current usage for EC2 instance types.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetAttributes": {
      "name": "DescribeFleetAttributes",
      "description": "Retrieves general properties, including status, for fleets.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetCapacity": {
      "name": "DescribeFleetCapacity",
      "description": "Retrieves the current capacity setting for fleets.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetEvents": {
      "name": "DescribeFleetEvents",
      "description": "Retrieves entries from a fleet's event log.",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetPortSettings": {
      "name": "DescribeFleetPortSettings",
      "description": "Retrieves the inbound connection permissions for a fleet.",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeFleetUtilization": {
      "name": "DescribeFleetUtilization",
      "description": "Retrieves utilization statistics for fleets.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameServer": {
      "name": "DescribeGameServer",
      "description": "Retrieves properties for a game server.",
      "accessLevel": "Read",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameServerGroup": {
      "name": "DescribeGameServerGroup",
      "description": "Retrieves properties for a game server group.",
      "accessLevel": "Read",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameServerInstances": {
      "name": "DescribeGameServerInstances",
      "description": "Retrieves the status of EC2 instances in a game server group.",
      "accessLevel": "Read",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameSessionDetails": {
      "name": "DescribeGameSessionDetails",
      "description": "Retrieves properties for game sessions in a fleet, including the protection policy.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameSessionPlacement": {
      "name": "DescribeGameSessionPlacement",
      "description": "Retrieves details of a game session placement request.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameSessionQueues": {
      "name": "DescribeGameSessionQueues",
      "description": "Retrieves properties for game session queues.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGameSessions": {
      "name": "DescribeGameSessions",
      "description": "Retrieves properties for game sessions in a fleet.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeInstances": {
      "name": "DescribeInstances",
      "description": "Retrieves information about instances in a fleet.",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeMatchmaking": {
      "name": "DescribeMatchmaking",
      "description": "Retrieves details of matchmaking tickets.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeMatchmakingConfigurations": {
      "name": "DescribeMatchmakingConfigurations",
      "description": "Retrieves properties for FlexMatch matchmakers.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeMatchmakingRuleSets": {
      "name": "DescribeMatchmakingRuleSets",
      "description": "Retrieves properties for FlexMatch matchmaking rule sets.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribePlayerSessions": {
      "name": "DescribePlayerSessions",
      "description": "Retrieves properties for player sessions in a game session.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeRuntimeConfiguration": {
      "name": "DescribeRuntimeConfiguration",
      "description": "Retrieves the current runtime configuration for a fleet.",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeScalingPolicies": {
      "name": "DescribeScalingPolicies",
      "description": "Retrieves all scaling policies that are applied to a fleet.",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeScript": {
      "name": "DescribeScript",
      "description": "Retrieves properties for a Realtime Servers script.",
      "accessLevel": "Read",
      "resourceTypes": [
        "script*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeVpcPeeringAuthorizations": {
      "name": "DescribeVpcPeeringAuthorizations",
      "description": "Retrieves valid VPC peering authorizations.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeVpcPeeringConnections": {
      "name": "DescribeVpcPeeringConnections",
      "description": "Retrieves details on active or pending VPC peering connections.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetGameSessionLogUrl": {
      "name": "GetGameSessionLogUrl",
      "description": "Retrieves the location of stored logs for a game session.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetInstanceAccess": {
      "name": "GetInstanceAccess",
      "description": "Requests remote access to a specified fleet instance.",
      "accessLevel": "Read",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAliases": {
      "name": "ListAliases",
      "description": "Retrieves all aliases that are defined in the current region.",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListBuilds": {
      "name": "ListBuilds",
      "description": "Retrieves all game build in the current region.",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListFleets": {
      "name": "ListFleets",
      "description": "Retrieves a list of fleet IDs for all fleets in the current region.",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListGameServerGroups": {
      "name": "ListGameServerGroups",
      "description": "Retrieves all game server groups that are defined in the current region.",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListGameServers": {
      "name": "ListGameServers",
      "description": "Retrieves all game servers that are currently running in a game server group.",
      "accessLevel": "List",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListScripts": {
      "name": "ListScripts",
      "description": "Retrieves properties for all Realtime Servers scripts in the current region.",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListTagsForResource": {
      "name": "ListTagsForResource",
      "description": "Lists tags for GameLift resources",
      "accessLevel": "List",
      "resourceTypes": [
        "alias"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutScalingPolicy": {
      "name": "PutScalingPolicy",
      "description": "Creates or updates a fleet auto-scaling policy.",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "RegisterGameServer": {
      "name": "RegisterGameServer",
      "description": "Notifies GameLift FleetIQ when a new game server is ready to host gameplay.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "RequestUploadCredentials": {
      "name": "RequestUploadCredentials",
      "description": "Retrieves fresh upload credentials to use when uploading a new game build.",
      "accessLevel": "Read",
      "resourceTypes": [
        "build*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ResolveAlias": {
      "name": "ResolveAlias",
      "description": "Retrieves the fleet ID associated with an alias.",
      "accessLevel": "Read",
      "resourceTypes": [
        "alias*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ResumeGameServerGroup": {
      "name": "ResumeGameServerGroup",
      "description": "Reinstates suspended FleetIQ activity for a game server group.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "SearchGameSessions": {
      "name": "SearchGameSessions",
      "description": "Retrieves game sessions that match a set of search criteria.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StartFleetActions": {
      "name": "StartFleetActions",
      "description": "Resumes auto-scaling activity on a fleet after it was suspended with StopFleetActions().",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StartGameSessionPlacement": {
      "name": "StartGameSessionPlacement",
      "description": "Sends a game session placement request to a game session queue.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameSessionQueue*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StartMatchBackfill": {
      "name": "StartMatchBackfill",
      "description": "Requests FlexMatch matchmaking to fill available player slots in an existing game\n                                                session.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StartMatchmaking": {
      "name": "StartMatchmaking",
      "description": "Requests FlexMatch matchmaking for one or a group of players and game session placement\n                                                for a resulting match.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StopFleetActions": {
      "name": "StopFleetActions",
      "description": "Suspends auto-scaling activity on a fleet.",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StopGameSessionPlacement": {
      "name": "StopGameSessionPlacement",
      "description": "Cancels a game session placement request that is in progress.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StopMatchmaking": {
      "name": "StopMatchmaking",
      "description": "Cancels a matchmaking or match backfill request that is in progress.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "SuspendGameServerGroup": {
      "name": "SuspendGameServerGroup",
      "description": "Temporarily stops FleetIQ activity for a game server group.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "TagResource": {
      "name": "TagResource",
      "description": "Tags GameLift resources",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "alias"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UntagResource": {
      "name": "UntagResource",
      "description": "Untags GameLift resources",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "alias"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateAlias": {
      "name": "UpdateAlias",
      "description": "Updates the properties of an existing alias.",
      "accessLevel": "Write",
      "resourceTypes": [
        "alias*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateBuild": {
      "name": "UpdateBuild",
      "description": "Updates an existing build's metadata.",
      "accessLevel": "Write",
      "resourceTypes": [
        "build*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateFleetAttributes": {
      "name": "UpdateFleetAttributes",
      "description": "Updates the general properties of an existing fleet.",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateFleetCapacity": {
      "name": "UpdateFleetCapacity",
      "description": "Adjusts a fleet's capacity settings.",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateFleetPortSettings": {
      "name": "UpdateFleetPortSettings",
      "description": "Adjusts a fleet's port settings.",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateGameServer": {
      "name": "UpdateGameServer",
      "description": "Changes game server properties, health status, or utilization status.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateGameServerGroup": {
      "name": "UpdateGameServerGroup",
      "description": "Updates properties for game server group, including allowed instance types.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameServerGroup*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateGameSession": {
      "name": "UpdateGameSession",
      "description": "Updates the properties of an existing game session.",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateGameSessionQueue": {
      "name": "UpdateGameSessionQueue",
      "description": "Updates properties of an existing game session queue.",
      "accessLevel": "Write",
      "resourceTypes": [
        "gameSessionQueue*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateMatchmakingConfiguration": {
      "name": "UpdateMatchmakingConfiguration",
      "description": "Updates properties of an existing FlexMatch matchmaking configuration.",
      "accessLevel": "Write",
      "resourceTypes": [
        "matchmakingConfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateRuntimeConfiguration": {
      "name": "UpdateRuntimeConfiguration",
      "description": "Updates how server processes are configured on instances in an existing fleet.",
      "accessLevel": "Write",
      "resourceTypes": [
        "fleet*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateScript": {
      "name": "UpdateScript",
      "description": "Updates the metadata and content of an existing Realtime Servers script.",
      "accessLevel": "Write",
      "resourceTypes": [
        "script*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ValidateMatchmakingRuleSet": {
      "name": "ValidateMatchmakingRuleSet",
      "description": "Validates the syntax of a FlexMatch matchmaking rule set.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    }
  },
  "name": "Amazon GameLift"
}