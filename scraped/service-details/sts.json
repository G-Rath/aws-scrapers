{
  "servicePrefix": "sts",
  "actions": {
    "AssumeRole": {
      "name": "AssumeRole",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Returns a set of temporary security credentials that you can use to access AWS resources\n                                                that you might not normally have access to",
      "accessLevel": "Write",
      "resourceTypes": [
        "role*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "AssumeRoleWithSAML": {
      "name": "AssumeRoleWithSAML",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Returns a set of temporary security credentials for users who have been authenticated\n                                                via a SAML authentication response",
      "accessLevel": "Write",
      "resourceTypes": [
        "role*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "AssumeRoleWithWebIdentity": {
      "name": "AssumeRoleWithWebIdentity",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Returns a set of temporary security credentials for users who have been authenticated\n                                                in a mobile or web application with a web identity provider",
      "accessLevel": "Write",
      "resourceTypes": [
        "role*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DecodeAuthorizationMessage": {
      "name": "DecodeAuthorizationMessage",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Decodes additional information about the authorization status of a request from an\n                                                encoded message returned in response to an AWS request",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAccessKeyInfo": {
      "name": "GetAccessKeyInfo",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Returns details about the access key id passed as a parameter to the request.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetCallerIdentity": {
      "name": "GetCallerIdentity",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Returns details about the IAM identity whose credentials are used to call the API",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetFederationToken": {
      "name": "GetFederationToken",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Returns a set of temporary security credentials (consisting of an access key ID, a\n                                                secret access key, and a security token) for a federated user",
      "accessLevel": "Read",
      "resourceTypes": [
        "user"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetServiceBearerToken": {
      "name": "GetServiceBearerToken",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Returns a STS bearer token for an AWS root user, IAM role, or an IAM user",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetSessionToken": {
      "name": "GetSessionToken",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Returns a set of temporary security credentials (consisting of an access key ID, a\n                                                secret access key, and a security token) for an AWS account or IAM user",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "TagSession": {
      "name": "TagSession",
      "topics": [
        "AWS Security Token Service"
      ],
      "description": "Grants permission to add tags to a STS session",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "role"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    }
  },
  "name": "AWS Security Token Service"
}