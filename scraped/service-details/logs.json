{
  "servicePrefix": "logs",
  "actions": {
    "AssociateKmsKey": {
      "name": "AssociateKmsKey",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Associates the specified AWS Key Management Service (AWS KMS) customer master key\n                                                (CMK) with the specified log group.",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CancelExportTask": {
      "name": "CancelExportTask",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Cancels an export task if it is in PENDING or RUNNING state",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateExportTask": {
      "name": "CreateExportTask",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates an ExportTask which allows you to efficiently export data from a Log Group\n                                                to your Amazon S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateLogDelivery": {
      "name": "CreateLogDelivery",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates the log delivery",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateLogGroup": {
      "name": "CreateLogGroup",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates a new log group with the specified name",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateLogStream": {
      "name": "CreateLogStream",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates a new log stream with the specified name",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteDestination": {
      "name": "DeleteDestination",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Deletes the destination with the specified name and eventually disables all the subscription\n                                                filters that publish to it",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteLogDelivery": {
      "name": "DeleteLogDelivery",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Deletes the log delivery information for specified log delivery",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteLogGroup": {
      "name": "DeleteLogGroup",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Deletes the log group with the specified name and permanently deletes all the archived\n                                                log events associated with it",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteLogStream": {
      "name": "DeleteLogStream",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Deletes a log stream and permanently deletes all the archived log events associated\n                                                with it",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-stream*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteMetricFilter": {
      "name": "DeleteMetricFilter",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Deletes a metric filter associated with the specified log group",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteQueryDefinition": {
      "name": "DeleteQueryDefinition",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Deletes a saved CloudWatch Logs Insights query definition",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteResourcePolicy": {
      "name": "DeleteResourcePolicy",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Deletes a resource policy from this account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteRetentionPolicy": {
      "name": "DeleteRetentionPolicy",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Deletes the retention policy of the specified log group",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteSubscriptionFilter": {
      "name": "DeleteSubscriptionFilter",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Deletes a subscription filter associated with the specified log group",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeDestinations": {
      "name": "DescribeDestinations",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns all the destinations that are associated with the AWS account making the request",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeExportTasks": {
      "name": "DescribeExportTasks",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns all the export tasks that are associated with the AWS account making the request",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeLogGroups": {
      "name": "DescribeLogGroups",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns all the log groups that are associated with the AWS account making the request",
      "accessLevel": "List",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeLogStreams": {
      "name": "DescribeLogStreams",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns all the log streams that are associated with the specified log group",
      "accessLevel": "List",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeMetricFilters": {
      "name": "DescribeMetricFilters",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns all the metrics filters associated with the specified log group",
      "accessLevel": "List",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeQueries": {
      "name": "DescribeQueries",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns a list of CloudWatch Logs Insights queries that are scheduled, executing,\n                                                or have been executed recently in this account. You can request all queries, or limit\n                                                it to queries of a specific log group or queries with a certain status.",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeQueryDefinitions": {
      "name": "DescribeQueryDefinitions",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns a paginated list of your saved CloudWatch Logs Insights query definitions",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeResourcePolicies": {
      "name": "DescribeResourcePolicies",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Return all the resource policies in this account.",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeSubscriptionFilters": {
      "name": "DescribeSubscriptionFilters",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns all the subscription filters associated with the specified log group",
      "accessLevel": "List",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DisassociateKmsKey": {
      "name": "DisassociateKmsKey",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Disassociates the associated AWS Key Management Service (AWS KMS) customer master\n                                                key (CMK) from the specified log group",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "FilterLogEvents": {
      "name": "FilterLogEvents",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Retrieves log events, optionally filtered by a filter pattern from the specified log\n                                                group",
      "accessLevel": "Read",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetLogDelivery": {
      "name": "GetLogDelivery",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Gets the log delivery information for specified log delivery",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetLogEvents": {
      "name": "GetLogEvents",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Retrieves log events from the specified log stream",
      "accessLevel": "Read",
      "resourceTypes": [
        "log-stream*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetLogGroupFields": {
      "name": "GetLogGroupFields",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns a list of the fields that are included in log events in the specified log\n                                                group, along with the percentage of log events that contain each field. The search\n                                                is limited to a time period that you specify.",
      "accessLevel": "Read",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetLogRecord": {
      "name": "GetLogRecord",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Retrieves all the fields and values of a single log event. All fields are retrieved,\n                                                even if the original query that produced the logRecordPointer retrieved only a subset\n                                                of fields. Fields are returned as field name/field value pairs.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetQueryResults": {
      "name": "GetQueryResults",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Returns the results from the specified query. If the query is in progress, partial\n                                                results of that current execution are returned. Only the fields requested in the query\n                                                are returned.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListLogDeliveries": {
      "name": "ListLogDeliveries",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Lists all the log deliveries for specified account and/or log source",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListTagsLogGroup": {
      "name": "ListTagsLogGroup",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Lists the tags for the specified log group",
      "accessLevel": "List",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutDestination": {
      "name": "PutDestination",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates or updates a Destination",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "iam:PassRole"
    },
    "PutDestinationPolicy": {
      "name": "PutDestinationPolicy",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates or updates an access policy associated with an existing Destination",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutLogEvents": {
      "name": "PutLogEvents",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Uploads a batch of log events to the specified log stream",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-stream*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutMetricFilter": {
      "name": "PutMetricFilter",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates or updates a metric filter and associates it with the specified log group",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutQueryDefinition": {
      "name": "PutQueryDefinition",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates or updates a metric filter and associates it with the specified log group",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutResourcePolicy": {
      "name": "PutResourcePolicy",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates or updates a resource policy allowing other AWS services to put log events\n                                                to this account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutRetentionPolicy": {
      "name": "PutRetentionPolicy",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Sets the retention of the specified log group",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutSubscriptionFilter": {
      "name": "PutSubscriptionFilter",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Creates or updates a subscription filter and associates it with the specified log\n                                                group",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": "iam:PassRole"
    },
    "StartQuery": {
      "name": "StartQuery",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Schedules a query of a log group using CloudWatch Logs Insights. You specify the log\n                                                group and time range to query, and the query string to use.",
      "accessLevel": "Read",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StopQuery": {
      "name": "StopQuery",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Stops a CloudWatch Logs Insights query that is in progress. If the query has already\n                                                ended, the operation returns an error indicating that the specified query is not running.",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "TagLogGroup": {
      "name": "TagLogGroup",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Adds or updates the specified tags for the specified log group",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "TestMetricFilter": {
      "name": "TestMetricFilter",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Tests the filter pattern of a metric filter against a sample of log event messages",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UntagLogGroup": {
      "name": "UntagLogGroup",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Removes the specified tags from the specified log group",
      "accessLevel": "Write",
      "resourceTypes": [
        "log-group*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateLogDelivery": {
      "name": "UpdateLogDelivery",
      "topics": [
        "Amazon CloudWatch Logs"
      ],
      "description": "Updates the log delivery information for specified log delivery",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    }
  },
  "topics": [
    "Amazon CloudWatch Logs"
  ]
}