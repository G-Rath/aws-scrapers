{
  "servicePrefix": "s3",
  "actions": {
    "AbortMultipartUpload": {
      "name": "AbortMultipartUpload",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to abort a multipart upload",
      "accessLevel": "Write",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "BypassGovernanceRetention": {
      "name": "BypassGovernanceRetention",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to allow circumvention of governance-mode object retention settings",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateAccessPoint": {
      "name": "CreateAccessPoint",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create a new access point",
      "accessLevel": "Write",
      "resourceTypes": [
        "accesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateAccessPointForObjectLambda": {
      "name": "CreateAccessPointForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create an object lambda enabled accesspoint",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateBucket": {
      "name": "CreateBucket",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create a new bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateJob": {
      "name": "CreateJob",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create a new Amazon S3 Batch Operations job",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:RequestJobPriority\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:RequestJobOperation\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:RequestTag/${TagKey}",
      "dependentActions": "iam:PassRole"
    },
    "DeleteAccessPoint": {
      "name": "DeleteAccessPoint",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to delete the access point named in the URI",
      "accessLevel": "Write",
      "resourceTypes": [
        "accesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteAccessPointForObjectLambda": {
      "name": "DeleteAccessPointForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to delete the object lambda enabled access point named in the URI",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteAccessPointPolicy": {
      "name": "DeleteAccessPointPolicy",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to delete the policy on a specified access point",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "accesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteAccessPointPolicyForObjectLambda": {
      "name": "DeleteAccessPointPolicyForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to delete the policy on a specified object lambda enabled access\n                                                point",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteBucket": {
      "name": "DeleteBucket",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to delete the bucket named in the URI",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteBucketOwnershipControls": {
      "name": "DeleteBucketOwnershipControls",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to delete ownership controls on a bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteBucketPolicy": {
      "name": "DeleteBucketPolicy",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to delete the policy on a specified bucket",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteBucketWebsite": {
      "name": "DeleteBucketWebsite",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to remove the website configuration for a bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteJobTagging": {
      "name": "DeleteJobTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to remove tags from an existing Amazon S3 Batch Operations job",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "job*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteObject": {
      "name": "DeleteObject",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to remove the null version of an object and insert a delete marker,\n                                                which becomes the current version of the object",
      "accessLevel": "Write",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteObjectTagging": {
      "name": "DeleteObjectTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to use the tagging subresource to remove the entire tag set from\n                                                the specified object",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteObjectVersion": {
      "name": "DeleteObjectVersion",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to remove a specific version of an object",
      "accessLevel": "Write",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteObjectVersionTagging": {
      "name": "DeleteObjectVersionTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to remove the entire tag set for a specific version of the object",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteStorageLensConfiguration": {
      "name": "DeleteStorageLensConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to delete an existing Amazon S3 Storage Lens configuration",
      "accessLevel": "Write",
      "resourceTypes": [
        "storagelensconfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteStorageLensConfigurationTagging": {
      "name": "DeleteStorageLensConfigurationTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to remove tags from an existing Amazon S3 Storage Lens configuration",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "storagelensconfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeJob": {
      "name": "DescribeJob",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to retrieve the configuration parameters and status for a batch\n                                                operations job",
      "accessLevel": "Read",
      "resourceTypes": [
        "job*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAccelerateConfiguration": {
      "name": "GetAccelerateConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to uses the accelerate subresource to return the Transfer Acceleration\n                                                state of a bucket, which is either Enabled or Suspended",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAccessPoint": {
      "name": "GetAccessPoint",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return configuration information about the specified access point",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "s3:DataAccessPointAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:DataAccessPointArn\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:AccessPointNetworkOrigin\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256",
      "dependentActions": ""
    },
    "GetAccessPointConfigurationForObjectLambda": {
      "name": "GetAccessPointConfigurationForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to retrieve the configuration of the object lambda enabled access\n                                                point",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAccessPointForObjectLambda": {
      "name": "GetAccessPointForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create an object lambda enabled accesspoint",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAccessPointPolicy": {
      "name": "GetAccessPointPolicy",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to returns the access point policy associated with the specified\n                                                access point",
      "accessLevel": "Read",
      "resourceTypes": [
        "accesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAccessPointPolicyForObjectLambda": {
      "name": "GetAccessPointPolicyForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to returns the access point policy associated with the specified\n                                                object lambda enabled access point",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAccessPointPolicyStatus": {
      "name": "GetAccessPointPolicyStatus",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the policy status for a specific access point policy",
      "accessLevel": "Read",
      "resourceTypes": [
        "accesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAccessPointPolicyStatusForObjectLambda": {
      "name": "GetAccessPointPolicyStatusForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the policy status for a specific object lambda access\n                                                point policy",
      "accessLevel": "Read",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAccountPublicAccessBlock": {
      "name": "GetAccountPublicAccessBlock",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to retrieve the PublicAccessBlock configuration for an AWS account",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256",
      "dependentActions": ""
    },
    "GetAnalyticsConfiguration": {
      "name": "GetAnalyticsConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get an analytics configuration from an Amazon S3 bucket, identified\n                                                by the analytics configuration ID",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketAcl": {
      "name": "GetBucketAcl",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to use the acl subresource to return the access control list (ACL)\n                                                of an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketCORS": {
      "name": "GetBucketCORS",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the CORS configuration information set for an Amazon S3\n                                                bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketLocation": {
      "name": "GetBucketLocation",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the Region that an Amazon S3 bucket resides in",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketLogging": {
      "name": "GetBucketLogging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the logging status of an Amazon S3 bucket and the permissions\n                                                users have to view or modify that status",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketNotification": {
      "name": "GetBucketNotification",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get the notification configuration of an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketObjectLockConfiguration": {
      "name": "GetBucketObjectLockConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get the Object Lock configuration of an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketOwnershipControls": {
      "name": "GetBucketOwnershipControls",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to retrieve ownership controls on a bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketPolicy": {
      "name": "GetBucketPolicy",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the policy of the specified bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketPolicyStatus": {
      "name": "GetBucketPolicyStatus",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to retrieve the policy status for a specific Amazon S3 bucket, which\n                                                indicates whether the bucket is public",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketPublicAccessBlock": {
      "name": "GetBucketPublicAccessBlock",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to retrieve the PublicAccessBlock configuration for an Amazon S3\n                                                bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketRequestPayment": {
      "name": "GetBucketRequestPayment",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the request payment configuration for an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketTagging": {
      "name": "GetBucketTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the tag set associated with an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketVersioning": {
      "name": "GetBucketVersioning",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the versioning state of an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetBucketWebsite": {
      "name": "GetBucketWebsite",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the website configuration for an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetEncryptionConfiguration": {
      "name": "GetEncryptionConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the default encryption configuration an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetIntelligentTieringConfiguration": {
      "name": "GetIntelligentTieringConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get an or list all Amazon S3 Intelligent Tiering configuration\n                                                in a S3 Bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetInventoryConfiguration": {
      "name": "GetInventoryConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return an inventory configuration from an Amazon S3 bucket, identified\n                                                by the inventory configuration ID",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetJobTagging": {
      "name": "GetJobTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the tag set of an existing Amazon S3 Batch Operations\n                                                job",
      "accessLevel": "Read",
      "resourceTypes": [
        "job*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetLifecycleConfiguration": {
      "name": "GetLifecycleConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the lifecycle configuration information set on an Amazon\n                                                S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetMetricsConfiguration": {
      "name": "GetMetricsConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get a metrics configuration from an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObject": {
      "name": "GetObject",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to retrieve objects from Amazon S3",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectAcl": {
      "name": "GetObjectAcl",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the access control list (ACL) of an object",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectLegalHold": {
      "name": "GetObjectLegalHold",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get an object's current Legal Hold status",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectRetention": {
      "name": "GetObjectRetention",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to retrieve the retention settings for an object",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectTagging": {
      "name": "GetObjectTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the tag set of an object",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectTorrent": {
      "name": "GetObjectTorrent",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return torrent files from an Amazon S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectVersion": {
      "name": "GetObjectVersion",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to retrieve a specific version of an object",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectVersionAcl": {
      "name": "GetObjectVersionAcl",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the access control list (ACL) of a specific object version",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectVersionForReplication": {
      "name": "GetObjectVersionForReplication",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to replicate both unencrypted objects and objects encrypted with\n                                                SSE-S3 or SSE-KMS",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectVersionTagging": {
      "name": "GetObjectVersionTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to return the tag set for a specific version of the object",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetObjectVersionTorrent": {
      "name": "GetObjectVersionTorrent",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get Torrent files about a different version using the versionId\n                                                subresource",
      "accessLevel": "Read",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetReplicationConfiguration": {
      "name": "GetReplicationConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get the replication configuration information set on an Amazon\n                                                S3 bucket",
      "accessLevel": "Read",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetStorageLensConfiguration": {
      "name": "GetStorageLensConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get an Amazon S3 Storage Lens configuration",
      "accessLevel": "Read",
      "resourceTypes": [
        "storagelensconfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetStorageLensConfigurationTagging": {
      "name": "GetStorageLensConfigurationTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get the tag set of an existing Amazon S3 Storage Lens configuration",
      "accessLevel": "Read",
      "resourceTypes": [
        "storagelensconfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetStorageLensDashboard": {
      "name": "GetStorageLensDashboard",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to get an Amazon S3 Storage Lens dashboard",
      "accessLevel": "Read",
      "resourceTypes": [
        "storagelensconfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAccessPoints": {
      "name": "ListAccessPoints",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to list access points",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256",
      "dependentActions": ""
    },
    "ListAccessPointsForObjectLambda": {
      "name": "ListAccessPointsForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to list object lambda enabled accesspoints",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256",
      "dependentActions": ""
    },
    "ListAllMyBuckets": {
      "name": "ListAllMyBuckets",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to list all buckets owned by the authenticated sender of the request",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256",
      "dependentActions": ""
    },
    "ListBucket": {
      "name": "ListBucket",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to list some or all of the objects in an Amazon S3 bucket (up to\n                                                1000)",
      "accessLevel": "List",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListBucketMultipartUploads": {
      "name": "ListBucketMultipartUploads",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to list in-progress multipart uploads",
      "accessLevel": "List",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListBucketVersions": {
      "name": "ListBucketVersions",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to list metadata about all the versions of objects in an Amazon\n                                                S3 bucket",
      "accessLevel": "List",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListJobs": {
      "name": "ListJobs",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to list current jobs and jobs that have ended recently",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256",
      "dependentActions": ""
    },
    "ListMultipartUploadParts": {
      "name": "ListMultipartUploadParts",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to list the parts that have been uploaded for a specific multipart\n                                                upload",
      "accessLevel": "List",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListStorageLensConfigurations": {
      "name": "ListStorageLensConfigurations",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to list Amazon S3 Storage Lens configurations",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256",
      "dependentActions": ""
    },
    "ObjectOwnerOverrideToBucketOwner": {
      "name": "ObjectOwnerOverrideToBucketOwner",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to change replica ownership",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutAccelerateConfiguration": {
      "name": "PutAccelerateConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to use the accelerate subresource to set the Transfer Acceleration\n                                                state of an existing S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutAccessPointConfigurationForObjectLambda": {
      "name": "PutAccessPointConfigurationForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the configuration of the object lambda enabled access point",
      "accessLevel": "Write",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutAccessPointPolicy": {
      "name": "PutAccessPointPolicy",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to associate an access policy with a specified access point",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "accesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutAccessPointPolicyForObjectLambda": {
      "name": "PutAccessPointPolicyForObjectLambda",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to associate an access policy with a specified object lambda enabled\n                                                access point",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "objectlambdaaccesspoint*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutAccountPublicAccessBlock": {
      "name": "PutAccountPublicAccessBlock",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create or modify the PublicAccessBlock configuration for an AWS\n                                                account",
      "accessLevel": "Permissions management",
      "resourceTypes": [],
      "conditionKeys": "s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256",
      "dependentActions": ""
    },
    "PutAnalyticsConfiguration": {
      "name": "PutAnalyticsConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set an analytics configuration for the bucket, specified by the\n                                                analytics configuration ID",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketAcl": {
      "name": "PutBucketAcl",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the permissions on an existing bucket using access control\n                                                lists (ACLs)",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketCORS": {
      "name": "PutBucketCORS",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the CORS configuration for an Amazon S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketLogging": {
      "name": "PutBucketLogging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the logging parameters for an Amazon S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketNotification": {
      "name": "PutBucketNotification",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to receive notifications when certain events happen in an Amazon\n                                                S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketObjectLockConfiguration": {
      "name": "PutBucketObjectLockConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to put Object Lock configuration on a specific bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketOwnershipControls": {
      "name": "PutBucketOwnershipControls",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to add or replace ownership controls on a bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketPolicy": {
      "name": "PutBucketPolicy",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to add or replace a bucket policy on a bucket",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketPublicAccessBlock": {
      "name": "PutBucketPublicAccessBlock",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create or modify the PublicAccessBlock configuration for a specific\n                                                Amazon S3 bucket",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketRequestPayment": {
      "name": "PutBucketRequestPayment",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the request payment configuration of a bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketTagging": {
      "name": "PutBucketTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to add a set of tags to an existing Amazon S3 bucket",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketVersioning": {
      "name": "PutBucketVersioning",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the versioning state of an existing Amazon S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutBucketWebsite": {
      "name": "PutBucketWebsite",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the configuration of the website that is specified in the\n                                                website subresource",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutEncryptionConfiguration": {
      "name": "PutEncryptionConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the encryption configuration for an Amazon S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutIntelligentTieringConfiguration": {
      "name": "PutIntelligentTieringConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create new or update or delete an existing Amazon S3 Intelligent\n                                                Tiering configuration",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutInventoryConfiguration": {
      "name": "PutInventoryConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to add an inventory configuration to the bucket, identified by the\n                                                inventory ID",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutJobTagging": {
      "name": "PutJobTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to replace tags on an existing Amazon S3 Batch Operations job",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "job*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutLifecycleConfiguration": {
      "name": "PutLifecycleConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create a new lifecycle configuration for the bucket or replace\n                                                an existing lifecycle configuration",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutMetricsConfiguration": {
      "name": "PutMetricsConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set or update a metrics configuration for the CloudWatch request\n                                                metrics from an Amazon S3 bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutObject": {
      "name": "PutObject",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to add an object to a bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutObjectAcl": {
      "name": "PutObjectAcl",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the access control list (ACL) permissions for new or existing\n                                                objects in an S3 bucket.",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutObjectLegalHold": {
      "name": "PutObjectLegalHold",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to apply a Legal Hold configuration to the specified object",
      "accessLevel": "Write",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutObjectRetention": {
      "name": "PutObjectRetention",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to place an Object Retention configuration on an object",
      "accessLevel": "Write",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutObjectTagging": {
      "name": "PutObjectTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the supplied tag-set to an object that already exists in\n                                                a bucket",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutObjectVersionAcl": {
      "name": "PutObjectVersionAcl",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to use the acl subresource to set the access control list (ACL)\n                                                permissions for an object that already exists in a bucket",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutObjectVersionTagging": {
      "name": "PutObjectVersionTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to set the supplied tag-set for a specific version of an object",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutReplicationConfiguration": {
      "name": "PutReplicationConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create a new replication configuration or replace an existing\n                                                one",
      "accessLevel": "Write",
      "resourceTypes": [
        "bucket*"
      ],
      "conditionKeys": "",
      "dependentActions": "iam:PassRole"
    },
    "PutStorageLensConfiguration": {
      "name": "PutStorageLensConfiguration",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to create or update an Amazon S3 Storage Lens configuration",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "s3:authType\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:ResourceAccount\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureAge\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:signatureversion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:TlsVersion\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      s3:x-amz-content-sha256\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:RequestTag/${TagKey}",
      "dependentActions": ""
    },
    "PutStorageLensConfigurationTagging": {
      "name": "PutStorageLensConfigurationTagging",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to put or replace tags on an existing Amazon S3 Storage Lens configuration",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "storagelensconfiguration*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ReplicateDelete": {
      "name": "ReplicateDelete",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to replicate delete markers to the destination bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ReplicateObject": {
      "name": "ReplicateObject",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to replicate objects and object tags to the destination bucket",
      "accessLevel": "Write",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ReplicateTags": {
      "name": "ReplicateTags",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to replicate object tags to the destination bucket",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "RestoreObject": {
      "name": "RestoreObject",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to restore an archived copy of an object back into Amazon S3",
      "accessLevel": "Write",
      "resourceTypes": [
        "object*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateJobPriority": {
      "name": "UpdateJobPriority",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to update the priority of an existing job",
      "accessLevel": "Write",
      "resourceTypes": [
        "job*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateJobStatus": {
      "name": "UpdateJobStatus",
      "topics": [
        "Amazon S3"
      ],
      "description": "Grants permission to update the status for the specified job",
      "accessLevel": "Write",
      "resourceTypes": [
        "job*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    }
  },
  "topics": [
    "Amazon S3"
  ]
}