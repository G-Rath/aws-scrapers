{
  "servicePrefix": "sso-directory",
  "actions": {
    "AddMemberToGroup": {
      "name": "AddMemberToGroup",
      "description": "Grants permission to add a member to a group in the directory that AWS SSO provides\n                                                by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CompleteVirtualMfaDeviceRegistration": {
      "name": "CompleteVirtualMfaDeviceRegistration",
      "description": "Grants permission to complete the creation process of a virtual MFA device",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateAlias": {
      "name": "CreateAlias",
      "description": "Grants permission to create an alias for the directory that AWS SSO provides by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateBearerToken": {
      "name": "CreateBearerToken",
      "description": "Grants permission to create a bearer token for a given provisioning tenant",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateExternalIdPConfigurationForDirectory": {
      "name": "CreateExternalIdPConfigurationForDirectory",
      "description": "Grants permission to create an External Identity Provider configuration for the directory",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateGroup": {
      "name": "CreateGroup",
      "description": "Grants permission to create a group in the directory that AWS SSO provides by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateProvisioningTenant": {
      "name": "CreateProvisioningTenant",
      "description": "Grants permission to create a provisioning tenant for a given directory",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateUser": {
      "name": "CreateUser",
      "description": "Grants permission to create a user in the directory that AWS SSO provides by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteBearerToken": {
      "name": "DeleteBearerToken",
      "description": "Grants permission to delete a bearer token",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteExternalIdPCertificate": {
      "name": "DeleteExternalIdPCertificate",
      "description": "Grants permission to delete the given external IdP certificate",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteExternalIdPConfigurationForDirectory": {
      "name": "DeleteExternalIdPConfigurationForDirectory",
      "description": "Grants permission to delete an External Identity Provider configuration associated\n                                                with the directory",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteGroup": {
      "name": "DeleteGroup",
      "description": "Grants permission to delete a group from the directory that AWS SSO provides by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteMfaDeviceForUser": {
      "name": "DeleteMfaDeviceForUser",
      "description": "Grants permission to delete a MFA device by device name for a given user",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteProvisioningTenant": {
      "name": "DeleteProvisioningTenant",
      "description": "Grants permission to delete the provisioning tenant",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteUser": {
      "name": "DeleteUser",
      "description": "Grants permission to delete a user from the directory that AWS SSO provides by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeDirectory": {
      "name": "DescribeDirectory",
      "description": "Grants permission to retrieve information about the directory that AWS SSO provides\n                                                by default",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeGroups": {
      "name": "DescribeGroups",
      "description": "Grants permission to retrieve information about a group from the directory that AWS\n                                                SSO provides by default",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeUser": {
      "name": "DescribeUser",
      "description": "Grants permission to retrieve information about a user from the directory that AWS\n                                                SSO provides by default",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeUsers": {
      "name": "DescribeUsers",
      "description": "Grants permission to retrieve information about user from the directory that AWS SSO\n                                                provides by default",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DisableExternalIdPConfigurationForDirectory": {
      "name": "DisableExternalIdPConfigurationForDirectory",
      "description": "Grants permission to disable authentication of end users with an External Identity\n                                                Provider",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DisableUser": {
      "name": "DisableUser",
      "description": "Grants permission to deactivate a user in the directory that AWS SSO provides by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "EnableExternalIdPConfigurationForDirectory": {
      "name": "EnableExternalIdPConfigurationForDirectory",
      "description": "Grants permission to enable authentication of end users with an External Identity\n                                                Provider",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "EnableUser": {
      "name": "EnableUser",
      "description": "Grants permission to activate user in the directory that AWS SSO provides by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetAWSSPConfigurationForDirectory": {
      "name": "GetAWSSPConfigurationForDirectory",
      "description": "Grants permission to retrieve the AWS SSO Service Provider configurations for the\n                                                directory",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ImportExternalIdPCertificate": {
      "name": "ImportExternalIdPCertificate",
      "description": "Grants permission to import the IdP certificate used for verifying external IdP responses",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "IsMemberInGroup": {
      "name": "IsMemberInGroup",
      "description": "Grants permission to check if a member is a part of the group in the directory that\n                                                AWS SSO provides by default",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListBearerTokens": {
      "name": "ListBearerTokens",
      "description": "Grants permission to list bearer tokens for a given provisioning tenant",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListExternalIdPCertificates": {
      "name": "ListExternalIdPCertificates",
      "description": "Grants permission to list the external IdP certificates of a given directory and IdP",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListExternalIdPConfigurationsForDirectory": {
      "name": "ListExternalIdPConfigurationsForDirectory",
      "description": "Grants permission to list all the External Identity Provider configurations created\n                                                for the directory",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListGroupsForUser": {
      "name": "ListGroupsForUser",
      "description": "Grants permission to list groups for a user from the directory that AWS SSO provides\n                                                by default",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListMembersInGroup": {
      "name": "ListMembersInGroup",
      "description": "Grants permission to retrieve all members that are part of a group in the directory\n                                                that AWS SSO provides by default",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListMfaDevicesForUser": {
      "name": "ListMfaDevicesForUser",
      "description": "Grants permission to list all active MFA devices and their MFA device metadata for\n                                                a user",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListProvisioningTenants": {
      "name": "ListProvisioningTenants",
      "description": "Grants permission to list provisioning tenants for a given directory",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "RemoveMemberFromGroup": {
      "name": "RemoveMemberFromGroup",
      "description": "Grants permission to remove a member that is part of a group in the directory that\n                                                AWS SSO provides by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "SearchGroups": {
      "name": "SearchGroups",
      "description": "Grants permission to search for groups within the associated directory",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "SearchUsers": {
      "name": "SearchUsers",
      "description": "Grants permission to search for users within the associated directory",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "StartVirtualMfaDeviceRegistration": {
      "name": "StartVirtualMfaDeviceRegistration",
      "description": "Grants permission to begin the creation process of virtual mfa device",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateExternalIdPConfigurationForDirectory": {
      "name": "UpdateExternalIdPConfigurationForDirectory",
      "description": "Grants permission to update an External Identity Provider configuration associated\n                                                with the directory",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateGroup": {
      "name": "UpdateGroup",
      "description": "Grants permission to update information about a group in the directory that AWS SSO\n                                                provides by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdatePassword": {
      "name": "UpdatePassword",
      "description": "Grants permission to update a password by sending password reset link via email or\n                                                generating one time password for a user in the directory that AWS SSO provides by\n                                                default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateUser": {
      "name": "UpdateUser",
      "description": "Grants permission to update user information in the directory that AWS SSO provides\n                                                by default",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "VerifyEmail": {
      "name": "VerifyEmail",
      "description": "Grants permission to verify an email address of an User",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    }
  },
  "name": "AWS SSO Directory"
}