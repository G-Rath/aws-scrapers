{
  "servicePrefix": "sso",
  "actions": {
    "AssociateDirectory": {
      "name": "AssociateDirectory",
      "description": "Connect a directory to be used by AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "ds:AuthorizeApplication"
    },
    "AssociateProfile": {
      "name": "AssociateProfile",
      "description": "Create an association between a directory user or group and a profile",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "AttachManagedPolicyToPermissionSet": {
      "name": "AttachManagedPolicyToPermissionSet",
      "description": "Attaches an AWS managed policy to a permission set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PermissionSet*": {
      "name": "PermissionSet*",
      "description": "",
      "accessLevel": "",
      "resourceTypes": []
    },
    "CreateAccountAssignment": {
      "name": "CreateAccountAssignment",
      "description": "Assigns access to a Principal for a specified AWS account using a specified permission\n                                                set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "Instance*": {
      "name": "Instance*",
      "description": "",
      "accessLevel": "",
      "resourceTypes": []
    },
    "CreateApplicationInstance": {
      "name": "CreateApplicationInstance",
      "description": "Add an application instance to AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateApplicationInstanceCertificate": {
      "name": "CreateApplicationInstanceCertificate",
      "description": "Add a new certificate for an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateManagedApplicationInstance": {
      "name": "CreateManagedApplicationInstance",
      "description": "Add a managed application instance to AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreatePermissionSet": {
      "name": "CreatePermissionSet",
      "description": "Create a permission set",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateProfile": {
      "name": "CreateProfile",
      "description": "Create a profile for an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateTrust": {
      "name": "CreateTrust",
      "description": "Create a federation trust in a target account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteAccountAssignment": {
      "name": "DeleteAccountAssignment",
      "description": "Deletes a Principal's access from a specified AWS account using a specified permission\n                                                set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteApplicationInstance": {
      "name": "DeleteApplicationInstance",
      "description": "Delete the application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteApplicationInstanceCertificate": {
      "name": "DeleteApplicationInstanceCertificate",
      "description": "Delete an inactive or expired certificate from the application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteInlinePolicyFromPermissionSet": {
      "name": "DeleteInlinePolicyFromPermissionSet",
      "description": "Deletes the inline policy from a specified permission set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteManagedApplicationInstance": {
      "name": "DeleteManagedApplicationInstance",
      "description": "Delete the managed application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeletePermissionSet": {
      "name": "DeletePermissionSet",
      "description": "Delete a permission set",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeletePermissionsPolicy": {
      "name": "DeletePermissionsPolicy",
      "description": "Delete the permission policy associated with a permission set",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteProfile": {
      "name": "DeleteProfile",
      "description": "Delete the profile for an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeAccountAssignmentCreationStatus": {
      "name": "DescribeAccountAssignmentCreationStatus",
      "description": "Describes the status of the assignment creation request.",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeAccountAssignmentDeletionStatus": {
      "name": "DescribeAccountAssignmentDeletionStatus",
      "description": "Describes the status of an assignment deletion request.",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribePermissionSet": {
      "name": "DescribePermissionSet",
      "description": "Describes a permission set",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribePermissionSetProvisioningStatus": {
      "name": "DescribePermissionSetProvisioningStatus",
      "description": "Describes the status for the given Permission Set Provisioning request.",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribePermissionsPolicies": {
      "name": "DescribePermissionsPolicies",
      "description": "Retrieve all the permissions policies associated with a permission set",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeRegisteredRegions": {
      "name": "DescribeRegisteredRegions",
      "description": "Obtains the regions where your organization has enabled AWS Single Sign-on",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DetachManagedPolicyFromPermissionSet": {
      "name": "DetachManagedPolicyFromPermissionSet",
      "description": "Detaches the attached AWS managed policy from the specified permission set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DisassociateDirectory": {
      "name": "DisassociateDirectory",
      "description": "Disassociate a directory to be used by AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "ds:UnauthorizeApplication"
    },
    "DisassociateProfile": {
      "name": "DisassociateProfile",
      "description": "Disassociate a directory user or group from a profile",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetApplicationInstance": {
      "name": "GetApplicationInstance",
      "description": "Retrieve details for an application instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetApplicationTemplate": {
      "name": "GetApplicationTemplate",
      "description": "Retrieve application template details",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetInlinePolicyForPermissionSet": {
      "name": "GetInlinePolicyForPermissionSet",
      "description": "Obtains the inline policy assigned to the permission set.",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetManagedApplicationInstance": {
      "name": "GetManagedApplicationInstance",
      "description": "Retrieve details for an application instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetMfaDeviceManagementForDirectory": {
      "name": "GetMfaDeviceManagementForDirectory",
      "description": "Retrieve Mfa Device Management settings for the directory",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetPermissionSet": {
      "name": "GetPermissionSet",
      "description": "Retrieve details of a permission set",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetPermissionsPolicy": {
      "name": "GetPermissionsPolicy",
      "description": "Retrieve all permission policies associated with a permission set",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "sso:DescribePermissionsPolicies"
    },
    "GetProfile": {
      "name": "GetProfile",
      "description": "Retrieve a profile for an application instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetSSOStatus": {
      "name": "GetSSOStatus",
      "description": "Check if AWS Single Sign-On is enabled",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetSharedSsoConfiguration": {
      "name": "GetSharedSsoConfiguration",
      "description": "Retrieve shared configuration for the current SSO instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetSsoConfiguration": {
      "name": "GetSsoConfiguration",
      "description": "Retrieve configuration for the current SSO instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetTrust": {
      "name": "GetTrust",
      "description": "Retrieve the federation trust in a target account",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ImportApplicationInstanceServiceProviderMetadata": {
      "name": "ImportApplicationInstanceServiceProviderMetadata",
      "description": "Update the application instance by uploading an application SAML metadata file provided\n                                                by the service provider",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAccountAssignmentCreationStatus": {
      "name": "ListAccountAssignmentCreationStatus",
      "description": "Lists the status of the AWS account assignment creation requests for a specified SSO\n                                                instance.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAccountAssignmentDeletionStatus": {
      "name": "ListAccountAssignmentDeletionStatus",
      "description": "Lists the status of the AWS account assignment deletion requests for a specified SSO\n                                                instance.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAccountAssignments": {
      "name": "ListAccountAssignments",
      "description": "Lists the assignee of the specified AWS account with the specified permission set.",
      "accessLevel": "List",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAccountsForProvisionedPermissionSet": {
      "name": "ListAccountsForProvisionedPermissionSet",
      "description": "Lists all the AWS accounts where the specified permission set is provisioned.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListApplicationInstanceCertificates": {
      "name": "ListApplicationInstanceCertificates",
      "description": "Retrieve all of the certificates for a given application instance",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListApplicationInstances": {
      "name": "ListApplicationInstances",
      "description": "Retrieve all application instances",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "sso:GetApplicationInstance"
    },
    "ListApplicationTemplates": {
      "name": "ListApplicationTemplates",
      "description": "Retrieve all supported application templates",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "sso:GetApplicationTemplate"
    },
    "ListApplications": {
      "name": "ListApplications",
      "description": "Retrieve all supported applications",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListDirectoryAssociations": {
      "name": "ListDirectoryAssociations",
      "description": "Retrieve details about the directory connected to AWS Single Sign-On",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListInstances": {
      "name": "ListInstances",
      "description": "Lists the SSO Instances that the caller has access to.",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListManagedPoliciesInPermissionSet": {
      "name": "ListManagedPoliciesInPermissionSet",
      "description": "Lists the AWS managed policies that are attached to a specified permission set.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListPermissionSetProvisioningStatus": {
      "name": "ListPermissionSetProvisioningStatus",
      "description": "Lists the status of the Permission Set Provisioning requests for a specified SSO instance.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListPermissionSets": {
      "name": "ListPermissionSets",
      "description": "Retrieve all permission sets",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListPermissionSetsProvisionedToAccount": {
      "name": "ListPermissionSetsProvisionedToAccount",
      "description": "Lists all the permission sets that are provisioned to a specified AWS account.",
      "accessLevel": "List",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListProfileAssociations": {
      "name": "ListProfileAssociations",
      "description": "Retrieve the directory user or group associated with the profile",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListProfiles": {
      "name": "ListProfiles",
      "description": "Retrieve all profiles for an application instance",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "sso:GetProfile"
    },
    "ListTagsForResource": {
      "name": "ListTagsForResource",
      "description": "Lists the tags that are attached to a specified resource.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ProvisionPermissionSet": {
      "name": "ProvisionPermissionSet",
      "description": "The process by which a specified permission set is provisioned to the specified target.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutInlinePolicyToPermissionSet": {
      "name": "PutInlinePolicyToPermissionSet",
      "description": "Attaches an IAM inline policy to a permission set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutMfaDeviceManagementForDirectory": {
      "name": "PutMfaDeviceManagementForDirectory",
      "description": "Put Mfa Device Management settings for the directory",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutPermissionsPolicy": {
      "name": "PutPermissionsPolicy",
      "description": "Add a policy to a permission set",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "SearchGroups": {
      "name": "SearchGroups",
      "description": "Search for groups within the associated directory",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "ds:DescribeDirectories"
    },
    "SearchUsers": {
      "name": "SearchUsers",
      "description": "Search for users within the associated directory",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "ds:DescribeDirectories"
    },
    "StartSSO": {
      "name": "StartSSO",
      "description": "Initialize AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "organization:DescribeOrganization\n                                                   \n                                                \n                                                \n                                                \n                                                   organizations:EnableAWSServiceAccess"
    },
    "TagResource": {
      "name": "TagResource",
      "description": "Associates a set of tags with a specified resource.",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "$85": {
      "name": "$85",
      "description": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "accessLevel": "",
      "resourceTypes": []
    },
    "UntagResource": {
      "name": "UntagResource",
      "description": "Disassociates a set of tags from a specified resource.",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "$88": {
      "name": "$88",
      "description": "aws:RequestTag/${TagKey}\n                                                      \n                                                   \n                                                \n                                                \n                                                \n                                                   \n                                                      aws:TagKeys",
      "accessLevel": "",
      "resourceTypes": []
    },
    "UpdateApplicationInstanceActiveCertificate": {
      "name": "UpdateApplicationInstanceActiveCertificate",
      "description": "Set a certificate as the active one for this application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceDisplayData": {
      "name": "UpdateApplicationInstanceDisplayData",
      "description": "Update display data of an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceResponseConfiguration": {
      "name": "UpdateApplicationInstanceResponseConfiguration",
      "description": "Update federation response configuration for the application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceResponseSchemaConfiguration": {
      "name": "UpdateApplicationInstanceResponseSchemaConfiguration",
      "description": "Update federation response schema configuration for the application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceSecurityConfiguration": {
      "name": "UpdateApplicationInstanceSecurityConfiguration",
      "description": "Update security details for the application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceServiceProviderConfiguration": {
      "name": "UpdateApplicationInstanceServiceProviderConfiguration",
      "description": "Update service provider related configuration for the application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceStatus": {
      "name": "UpdateApplicationInstanceStatus",
      "description": "Update the status of an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateDirectoryAssociation": {
      "name": "UpdateDirectoryAssociation",
      "description": "Update the user attribute mappings for your connected directory",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateManagedApplicationInstanceStatus": {
      "name": "UpdateManagedApplicationInstanceStatus",
      "description": "Update the status of a managed application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdatePermissionSet": {
      "name": "UpdatePermissionSet",
      "description": "Update the permission set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateProfile": {
      "name": "UpdateProfile",
      "description": "Update the profile for an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateSSOConfiguration": {
      "name": "UpdateSSOConfiguration",
      "description": "Update the configuration for the current SSO instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateTrust": {
      "name": "UpdateTrust",
      "description": "Update the federation trust in a target account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    }
  },
  "name": "AWS SSO"
}