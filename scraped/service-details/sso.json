{
  "servicePrefix": "sso",
  "actions": {
    "AssociateDirectory": {
      "name": "AssociateDirectory",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to connect a directory to be used by AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "ds:AuthorizeApplication"
    },
    "AssociateProfile": {
      "name": "AssociateProfile",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to create an association between a directory user or group and a\n                                                profile",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "AttachManagedPolicyToPermissionSet": {
      "name": "AttachManagedPolicyToPermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to attach an AWS managed policy to a permission set.",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateAccountAssignment": {
      "name": "CreateAccountAssignment",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to assign access to a Principal for a specified AWS account using\n                                                a specified permission set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateApplicationInstance": {
      "name": "CreateApplicationInstance",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to add an application instance to AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateApplicationInstanceCertificate": {
      "name": "CreateApplicationInstanceCertificate",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to add a new certificate for an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateInstanceAccessControlAttributeConfiguration": {
      "name": "CreateInstanceAccessControlAttributeConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to enable the instance for ABAC and specify the attributes",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateManagedApplicationInstance": {
      "name": "CreateManagedApplicationInstance",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to add a managed application instance to AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreatePermissionSet": {
      "name": "CreatePermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to create a permission set",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateProfile": {
      "name": "CreateProfile",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to create a profile for an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "CreateTrust": {
      "name": "CreateTrust",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to create a federation trust in a target account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteAccountAssignment": {
      "name": "DeleteAccountAssignment",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to delete a Principal's access from a specified AWS account using\n                                                a specified permission set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteApplicationInstance": {
      "name": "DeleteApplicationInstance",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to delete the application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteApplicationInstanceCertificate": {
      "name": "DeleteApplicationInstanceCertificate",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to delete an inactive or expired certificate from the application\n                                                instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteInlinePolicyFromPermissionSet": {
      "name": "DeleteInlinePolicyFromPermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to delete the inline policy from a specified permission set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteInstanceAccessControlAttributeConfiguration": {
      "name": "DeleteInstanceAccessControlAttributeConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to disable ABAC and remove the attributes list for the instance",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteManagedApplicationInstance": {
      "name": "DeleteManagedApplicationInstance",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to delete the managed application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeletePermissionSet": {
      "name": "DeletePermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to delete a permission set",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeletePermissionsPolicy": {
      "name": "DeletePermissionsPolicy",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to delete the permission policy associated with a permission set",
      "accessLevel": "Permissions management",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DeleteProfile": {
      "name": "DeleteProfile",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to delete the profile for an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeAccountAssignmentCreationStatus": {
      "name": "DescribeAccountAssignmentCreationStatus",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to describe the status of the assignment creation request.",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeAccountAssignmentDeletionStatus": {
      "name": "DescribeAccountAssignmentDeletionStatus",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to describe the status of an assignment deletion request.",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeInstanceAccessControlAttributeConfiguration": {
      "name": "DescribeInstanceAccessControlAttributeConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to get the list of attributes used by the instance for ABAC",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribePermissionSet": {
      "name": "DescribePermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to describe a permission set",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribePermissionSetProvisioningStatus": {
      "name": "DescribePermissionSetProvisioningStatus",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to describe the status for the given Permission Set Provisioning\n                                                request.",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribePermissionsPolicies": {
      "name": "DescribePermissionsPolicies",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve all the permissions policies associated with a permission\n                                                set",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DescribeRegisteredRegions": {
      "name": "DescribeRegisteredRegions",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to obtain the regions where your organization has enabled AWS Single\n                                                Sign-on",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DetachManagedPolicyFromPermissionSet": {
      "name": "DetachManagedPolicyFromPermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to detach the attached AWS managed policy from the specified permission\n                                                set.",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "DisassociateDirectory": {
      "name": "DisassociateDirectory",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to disassociate a directory to be used by AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "ds:UnauthorizeApplication"
    },
    "DisassociateProfile": {
      "name": "DisassociateProfile",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to disassociate a directory user or group from a profile",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetApplicationInstance": {
      "name": "GetApplicationInstance",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve details for an application instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetApplicationTemplate": {
      "name": "GetApplicationTemplate",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve application template details",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetInlinePolicyForPermissionSet": {
      "name": "GetInlinePolicyForPermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to obtain the inline policy assigned to the permission set.",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetManagedApplicationInstance": {
      "name": "GetManagedApplicationInstance",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve details for an application instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetMfaDeviceManagementForDirectory": {
      "name": "GetMfaDeviceManagementForDirectory",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve Mfa Device Management settings for the directory",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetPermissionSet": {
      "name": "GetPermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve details of a permission set",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetPermissionsPolicy": {
      "name": "GetPermissionsPolicy",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve all permission policies associated with a permission\n                                                set",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "sso:DescribePermissionsPolicies"
    },
    "GetProfile": {
      "name": "GetProfile",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve a profile for an application instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetSSOStatus": {
      "name": "GetSSOStatus",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to check if AWS Single Sign-On is enabled",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetSharedSsoConfiguration": {
      "name": "GetSharedSsoConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve shared configuration for the current SSO instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetSsoConfiguration": {
      "name": "GetSsoConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve configuration for the current SSO instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "GetTrust": {
      "name": "GetTrust",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve the federation trust in a target account",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ImportApplicationInstanceServiceProviderMetadata": {
      "name": "ImportApplicationInstanceServiceProviderMetadata",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update the application instance by uploading an application SAML\n                                                metadata file provided by the service provider",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAccountAssignmentCreationStatus": {
      "name": "ListAccountAssignmentCreationStatus",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to list the status of the AWS account assignment creation requests\n                                                for a specified SSO instance.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAccountAssignmentDeletionStatus": {
      "name": "ListAccountAssignmentDeletionStatus",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to list the status of the AWS account assignment deletion requests\n                                                for a specified SSO instance.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAccountAssignments": {
      "name": "ListAccountAssignments",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to list the assignee of the specified AWS account with the specified\n                                                permission set.",
      "accessLevel": "List",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListAccountsForProvisionedPermissionSet": {
      "name": "ListAccountsForProvisionedPermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to list all the AWS accounts where the specified permission set\n                                                is provisioned.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListApplicationInstanceCertificates": {
      "name": "ListApplicationInstanceCertificates",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve all of the certificates for a given application instance",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListApplicationInstances": {
      "name": "ListApplicationInstances",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve all application instances",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "sso:GetApplicationInstance"
    },
    "ListApplicationTemplates": {
      "name": "ListApplicationTemplates",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve all supported application templates",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "sso:GetApplicationTemplate"
    },
    "ListApplications": {
      "name": "ListApplications",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve all supported applications",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListDirectoryAssociations": {
      "name": "ListDirectoryAssociations",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve details about the directory connected to AWS Single\n                                                Sign-On",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListInstances": {
      "name": "ListInstances",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to list the SSO Instances that the caller has access to.",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListManagedPoliciesInPermissionSet": {
      "name": "ListManagedPoliciesInPermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to list the AWS managed policies that are attached to a specified\n                                                permission set.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListPermissionSetProvisioningStatus": {
      "name": "ListPermissionSetProvisioningStatus",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to list the status of the Permission Set Provisioning requests for\n                                                a specified SSO instance.",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListPermissionSets": {
      "name": "ListPermissionSets",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve all permission sets",
      "accessLevel": "List",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListPermissionSetsProvisionedToAccount": {
      "name": "ListPermissionSetsProvisionedToAccount",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to list all the permission sets that are provisioned to a specified\n                                                AWS account.",
      "accessLevel": "List",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListProfileAssociations": {
      "name": "ListProfileAssociations",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve the directory user or group associated with the profile",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ListProfiles": {
      "name": "ListProfiles",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to retrieve all profiles for an application instance",
      "accessLevel": "List",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "sso:GetProfile"
    },
    "ListTagsForResource": {
      "name": "ListTagsForResource",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to list the tags that are attached to a specified resource.",
      "accessLevel": "Read",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "ProvisionPermissionSet": {
      "name": "ProvisionPermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to provision a specified permission set to the specified target.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Account*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutInlinePolicyToPermissionSet": {
      "name": "PutInlinePolicyToPermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to attach an IAM inline policy to a permission set.",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutMfaDeviceManagementForDirectory": {
      "name": "PutMfaDeviceManagementForDirectory",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to put Mfa Device Management settings for the directory",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "PutPermissionsPolicy": {
      "name": "PutPermissionsPolicy",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to add a policy to a permission set",
      "accessLevel": "Permissions management",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "SearchGroups": {
      "name": "SearchGroups",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to search for groups within the associated directory",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "ds:DescribeDirectories"
    },
    "SearchUsers": {
      "name": "SearchUsers",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to search for users within the associated directory",
      "accessLevel": "Read",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "ds:DescribeDirectories"
    },
    "StartSSO": {
      "name": "StartSSO",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to initialize AWS Single Sign-On",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": "organizations:DescribeOrganization\n                                                   \n                                                \n                                                \n                                                \n                                                   organizations:EnableAWSServiceAccess"
    },
    "TagResource": {
      "name": "TagResource",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to associate a set of tags with a specified resource.",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UntagResource": {
      "name": "UntagResource",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to disassociate a set of tags from a specified resource.",
      "accessLevel": "Tagging",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceActiveCertificate": {
      "name": "UpdateApplicationInstanceActiveCertificate",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to set a certificate as the active one for this application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceDisplayData": {
      "name": "UpdateApplicationInstanceDisplayData",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update display data of an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceResponseConfiguration": {
      "name": "UpdateApplicationInstanceResponseConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update federation response configuration for the application\n                                                instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceResponseSchemaConfiguration": {
      "name": "UpdateApplicationInstanceResponseSchemaConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update federation response schema configuration for the application\n                                                instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceSecurityConfiguration": {
      "name": "UpdateApplicationInstanceSecurityConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update security details for the application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceServiceProviderConfiguration": {
      "name": "UpdateApplicationInstanceServiceProviderConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update service provider related configuration for the application\n                                                instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateApplicationInstanceStatus": {
      "name": "UpdateApplicationInstanceStatus",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update the status of an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateDirectoryAssociation": {
      "name": "UpdateDirectoryAssociation",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update the user attribute mappings for your connected directory",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateInstanceAccessControlAttributeConfiguration": {
      "name": "UpdateInstanceAccessControlAttributeConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update the attributes to use with the instance for ABAC",
      "accessLevel": "Write",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateManagedApplicationInstanceStatus": {
      "name": "UpdateManagedApplicationInstanceStatus",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update the status of a managed application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdatePermissionSet": {
      "name": "UpdatePermissionSet",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update the permission set.",
      "accessLevel": "Permissions management",
      "resourceTypes": [
        "Instance*"
      ],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateProfile": {
      "name": "UpdateProfile",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update the profile for an application instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateSSOConfiguration": {
      "name": "UpdateSSOConfiguration",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update the configuration for the current SSO instance",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    },
    "UpdateTrust": {
      "name": "UpdateTrust",
      "topics": [
        "AWS SSO"
      ],
      "description": "Grants permission to update the federation trust in a target account",
      "accessLevel": "Write",
      "resourceTypes": [],
      "conditionKeys": "",
      "dependentActions": ""
    }
  },
  "topics": [
    "AWS SSO"
  ]
}